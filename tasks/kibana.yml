---
- name: Kibana archive available
  become: yes
  get_url: >
    dest=/opt
    url=https://download.elastic.co/kibana/kibana/kibana-{{ elk_kibana.version }}.tar.gz
    owner={{ elk_nginx.user }} group={{ elk_nginx.user }}
  register: new_archive_downloaded

- name: Kibana archive uncompressed
  become: yes
  unarchive: >
    src=/opt/kibana-{{ elk_kibana.version }}.tar.gz
    dest=/opt
    copy=no
    owner={{ elk_nginx.user }}
    group={{ elk_nginx.user }}
  when: new_archive_downloaded|changed

- name: Uncompressed Kibana linked to path
  become: yes
  file: >
    src=/opt/kibana-{{ elk_kibana.version }}
    state=link
    path={{ elk_kibana.path }}
    owner={{ elk_nginx.user }}
    group={{ elk_nginx.user }}

- name: Kibana files ownership
  file: >
    path=/opt/kibana-{{ elk_kibana.version }}
    recurse=yes
    state=directory
    owner={{ elk_nginx.user }}
    group={{ elk_nginx.user }}
  changed_when: False
  become: yes

- name: Supervisor config file
  template: >
    src=kibana-supervisor.j2
    dest=/etc/supervisor/conf.d/kibana.conf
    owner=root
    group=root
    mode=644
  become: yes
  notify: Restart supervisor

- name: Generate kibana htpassword
  become: yes
  shell: echo "{{ elk_kibana.user }}:$(openssl passwd -crypt {{ elk_kibana.password }}):kibana" | tee .kibana.htpasswd
  args:
    chdir: /etc/nginx/conf.d
    creates: /etc/nginx/conf.d/.kibana.htpasswd
  register: http_pass_gen
  when: elk_kibana.user is defined and elk_kibana.password is defined

- name: Kibana htpassword file permissions
  become: yes
  file: >
    path=/etc/nginx/conf.d/.kibana.htpasswd
    owner={{ elk_nginx.user }}
    group=root
    mode=400
  when: http_pass_gen|changed

- name: Nginx config file
  become: yes
  template: >
    src=kibana-default.j2
    dest=/etc/nginx/conf.d/kibana.conf
    owner=root
    group=root
    mode=644
  notify: Restart nginx
